(()=>{"use strict";const e=function(){let e=0;return{createTodoItem:function(t,o,n){return{id:e++,title:t,description:o,dueDate:n}}}}();function t(e){let t=[];return{getTodo:function(){return t},getName:function(){return e},addListItem:function(e){t.push(e)},removeListItem:function(e){t=t.filter((t=>t.id!==e))},sortList:function(){t.sort(((e,t)=>{let o=new Date(e.dueDate),n=new Date(t.dueDate);return[o,n]=[o.getTime(),n.getTime()],o<n?-1:o>n?1:0}))}}}const o=function(){const e={};let t=null;return{getSelectedProject:function(){return t},selectProject:function(o){t=e[o.getName()]},addProject:function(t){e[t.getName()]=t},deleteProject:function(t){delete e[t.getName()]},getProjectList:function(){return e}}}(),n=function(){const n=function(){document.querySelector(".content").innerHTML='<button class="add-task-btn"><img src="../res/plus-circle-outline.svg"> Add a Task</button>',c();const e=o.getSelectedProject().getTodo();for(let t=0;t<e.length;t++){const{title:c,description:d,dueDate:a}=e[t],r=`<div class="task__title">${c}</div>\n        <button class="task__details-btn modal-open">DETAILS</button>\n        <div class="task__due-date">${a}</div>\n        <button class="task__delete-btn"></button>\n        <dialog class="task--modal hidden">\n          <button class="task--modal__exit-btn modal-close"></button>\n          <div class="task--modal__title">\n            ${c}\n          </div>\n          <div class="task--modal__description">\n           ${d}\n          </div>\n          <div class="task--modal__due-date">\n            ${a}\n          </div>\n        </dialog>`,s=e[t].id,l=document.createElement("div");l.classList.add("card--task"),l.setAttribute("task-id",s),l.innerHTML=r,document.querySelector(".add-task-btn").before(l),console.log(t,s,r);const i=document.querySelector(`[task-id="${s}"] .task--modal`),u=document.querySelector(`[task-id="${s}"] .modal-open`),m=document.querySelector(`[task-id="${s}"] .modal-close`);u.addEventListener("click",(()=>{i.showModal(),i.classList.toggle("hidden")})),m.addEventListener("click",(()=>{i.close(),i.classList.toggle("hidden")})),document.querySelector(`[task-id="${s}"] .task__delete-btn`).addEventListener("click",(()=>{o.getSelectedProject().removeListItem(s),n()}))}},c=function(){document.querySelector(".add-task-btn").addEventListener("click",(()=>{!function(){if(null!==document.querySelector("form"))return void console.log("ERROR: Add a Task Form already present!");const t=document.createElement("form"),c=function(){document.querySelector(".content").removeChild(t)};t.classList.add("form--add-task"),t.innerHTML='<label class="form--add-task__label" for="title">Title</label>\n      <input class="form--add-task__input" id="title" type="text" name="Task Title" placeholder="What to do?" required>\n      <label class="form--add-task__label" for="desciption">Description (optional)</label>\n      <textarea class="form--add-task__input" id="description" type="text" name="Task Description" placeholder="e.g. Coordinate with teammates via Zoom"></textarea>\n      <label class="form--add-task__label" for="dueDate">Due Date</label>\n      <input class="form--add-task__input" id="dueDate" type="date" name="Task Due Date" required>\n      <div class="form--add-task__buttons">\n        <button class="buttons__add type="submit">Add</button><button class="buttons__cancel" type="button">Cancel</button>\n      </div>',document.querySelector(".add-task-btn").before(t),document.querySelector(".buttons__cancel").addEventListener("click",(()=>{c()})),document.querySelector(".buttons__add").addEventListener("click",(t=>{t.preventDefault();const d=document.querySelector("#title").value,a=document.querySelector("#description").value;let r=new Date(document.querySelector("#dueDate").value);if(r=r.toLocaleDateString(void 0,{year:"numeric",month:"2-digit",day:"2-digit"}),d&&"Invalid Date"!==r){const t=e.createTodoItem(d,a,r);o.getSelectedProject().addListItem(t),o.getSelectedProject().sortList(),console.log("APPENDED LIST",o.getSelectedProject().getTodo()),c(),n()}}))}()}))},d=function(){const e=document.querySelectorAll(".aside__category__project");e.forEach((t=>{t.addEventListener("click",(()=>{console.log("clicked!",o.getProjectList()[t.textContent].getTodo()),o.selectProject(o.getProjectList()[t.textContent]),n(),e.forEach((e=>{e.classList.contains("project--selected")&&e.classList.remove("project--selected")})),t.classList.add("project--selected")}))}))};return{initializeAddATaskButton:c,renderProjectTasks:n,initializeProjectButtons:d,initializeNewProjectButton:function(){document.querySelector(".aside__category__project--new").addEventListener("click",(()=>{if(null!==document.querySelector(".form-project--new"))return void console.log("ERROR: The New Project form is already being displayed!");const e=document.createElement("form");e.classList.add("form-project--new"),e.innerHTML='<input class="form__name-field" type="text" name="project-name" id="project-name" placeholder="Project Name" required>\n      <button type="button" class="form__cancel"></button>\n      <button type="submit" class="form__confirm"></button>';const c=document.querySelector("hr");c.after(e),document.querySelector("button.form__cancel").addEventListener("click",(t=>{t.preventDefault(),e.remove()})),document.querySelector("button.form__confirm").addEventListener("click",(a=>{a.preventDefault();const r=document.querySelector(".form__name-field");console.log(r.value),o.addProject(t(r.value)),o.selectProject(o.getProjectList()[r.value]),console.log("selected project:",o.getSelectedProject()),e.remove();const s=document.createElement("button"),l=`<img src="../res/projects-icon.svg">${o.getSelectedProject().getName()}`;s.classList.add("aside__category__project"),s.innerHTML=l,c.before(s),document.querySelectorAll(".aside__category__project").forEach((e=>{e.classList.contains("project--selected")&&e.classList.remove("project--selected")})),d(),s.classList.add("project--selected"),n()}))}))}}}(),c=t("Home"),d=t("Work");o.addProject(c),o.addProject(d),o.selectProject(c),console.log("selected project",o.getSelectedProject()),n.initializeAddATaskButton(),n.initializeProjectButtons(),n.initializeNewProjectButton()})();