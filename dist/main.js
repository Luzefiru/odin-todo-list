(()=>{"use strict";const e=function(){let e=0;return{createTodoItem:function(t,o,n){return{id:e++,title:t,description:o,dueDate:n}}}}();function t(e){let t=[];return{getTodo:function(){return t},getName:function(){return e},addListItem:function(e){t.push(e)},removeListItem:function(e){t=t.filter((t=>t.id!==e))},sortList:function(){t.sort(((e,t)=>{let o=new Date(e.dueDate),n=new Date(t.dueDate);return[o,n]=[o.getTime(),n.getTime()],o<n?-1:o>n?1:0}))}}}const o=function(){const e={};let t=null;return{getSelectedProject:function(){return t},selectProject:function(o){t=e[o.getName()]},addProject:function(t){e[t.getName()]=t},deleteProject:function(t){delete e[t.getName()]},getProjectList:function(){return e}}}(),n=function(){const t=function(){document.querySelector(".content").innerHTML='<button class="add-task-btn"><img src="../res/plus-circle-outline.svg"> Add a Task</button>',n();const e=o.getSelectedProject().getTodo();for(let n=0;n<e.length;n++){const{title:d,description:c,dueDate:a}=e[n],s=`<div class="task__title">${d}</div>\n        <button class="task__details-btn modal-open">DETAILS</button>\n        <div class="task__due-date">${a}</div>\n        <button class="task__delete-btn"></button>\n        <dialog class="task--modal hidden">\n          <button class="task--modal__exit-btn modal-close"></button>\n          <div class="task--modal__title">\n            ${d}\n          </div>\n          <div class="task--modal__description">\n           ${c}\n          </div>\n          <div class="task--modal__due-date">\n            ${a}\n          </div>\n        </dialog>`,l=e[n].id,i=document.createElement("div");i.classList.add("card--task"),i.setAttribute("task-id",l),i.innerHTML=s,document.querySelector(".add-task-btn").before(i),console.log(n,l,s);const r=document.querySelector(`[task-id="${l}"] .task--modal`),u=document.querySelector(`[task-id="${l}"] .modal-open`),m=document.querySelector(`[task-id="${l}"] .modal-close`);u.addEventListener("click",(()=>{r.showModal(),r.classList.toggle("hidden")})),m.addEventListener("click",(()=>{r.close(),r.classList.toggle("hidden")})),document.querySelector(`[task-id="${l}"] .task__delete-btn`).addEventListener("click",(()=>{o.getSelectedProject().removeListItem(l),t()}))}},n=function(){document.querySelector(".add-task-btn").addEventListener("click",(()=>{!function(){if(null!==document.querySelector("form"))return void console.log("ERROR: Add a Task Form already present!");const n=document.createElement("form"),d=function(){document.querySelector(".content").removeChild(n)};n.classList.add("form--add-task"),n.innerHTML='<label class="form--add-task__label" for="title">Title</label>\n      <input class="form--add-task__input" id="title" type="text" name="Task Title" placeholder="What to do?" required>\n      <label class="form--add-task__label" for="desciption">Description (optional)</label>\n      <textarea class="form--add-task__input" id="description" type="text" name="Task Description" placeholder="e.g. Coordinate with teammates via Zoom"></textarea>\n      <label class="form--add-task__label" for="dueDate">Due Date</label>\n      <input class="form--add-task__input" id="dueDate" type="date" name="Task Due Date" required>\n      <div class="form--add-task__buttons">\n        <button class="buttons__add type="submit">Add</button><button class="buttons__cancel" type="button">Cancel</button>\n      </div>',document.querySelector(".add-task-btn").before(n),document.querySelector(".buttons__cancel").addEventListener("click",(()=>{d()})),document.querySelector(".buttons__add").addEventListener("click",(n=>{n.preventDefault();const c=document.querySelector("#title").value,a=document.querySelector("#description").value;let s=new Date(document.querySelector("#dueDate").value);if(s=s.toLocaleDateString(void 0,{year:"numeric",month:"2-digit",day:"2-digit"}),c&&"Invalid Date"!==s){const n=e.createTodoItem(c,a,s);o.getSelectedProject().addListItem(n),o.getSelectedProject().sortList(),console.log("APPENDED LIST",o.getSelectedProject().getTodo()),d(),t()}}))}()}))};return{initializeAddATaskButton:n,renderProjectTasks:t,initializeProjectButtons:function(){const e=document.querySelectorAll(".aside__category__project");e.forEach((n=>{n.addEventListener("click",(()=>{console.log("clicked!",o.getProjectList()[n.textContent].getTodo()),o.selectProject(o.getProjectList()[n.textContent]),t(),e.forEach((e=>{e.classList.contains("project--selected")&&e.classList.remove("project--selected")})),n.classList.add("project--selected")}))}))}}}(),d=t("Home"),c=t("Work");o.addProject(d),o.addProject(c),o.selectProject(d),console.log("selected project",o.getSelectedProject()),n.initializeAddATaskButton(),n.initializeProjectButtons()})();