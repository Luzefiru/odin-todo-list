(()=>{"use strict";const e=function(){let e=0;return{createTodoItem:function(t,o,n){return{id:e++,title:t,description:o,dueDate:n}}}}(),t=function(){const e={};let t=null;return{getSelectedProject:function(){return t},selectProject:function(o){t=e[o.getName()]},addProject:function(t){e[t.getName()]=t},deleteProject:function(t){delete e[t.getName()]},getProjectList:function(){return e}}}(),o=function(){document.querySelector(".add-task-btn").addEventListener("click",(()=>{!function(){if(null!==document.querySelector("form"))return void console.log("ERROR: Add a Task Form already present!");const o=document.createElement("form"),n=function(){document.querySelector(".content").removeChild(o)};o.classList.add("form--add-task"),o.innerHTML='<label class="form--add-task__label" for="title">Title</label>\n      <input class="form--add-task__input" id="title" type="text" name="Task Title" placeholder="What to do?" required>\n      <label class="form--add-task__label" for="desciption">Description (optional)</label>\n      <textarea class="form--add-task__input" id="description" type="text" name="Task Description" placeholder="e.g. Coordinate with teammates via Zoom"></textarea>\n      <label class="form--add-task__label" for="dueDate">Due Date</label>\n      <input class="form--add-task__input" id="dueDate" type="date" name="Task Due Date" required>\n      <div class="form--add-task__buttons">\n        <button class="buttons__add type="submit">Add</button><button class="buttons__cancel" type="button">Cancel</button>\n      </div>',document.querySelector(".add-task-btn").before(o),document.querySelector(".buttons__cancel").addEventListener("click",(()=>{n()})),document.querySelector(".buttons__add").addEventListener("click",(o=>{o.preventDefault();const c=document.querySelector("#title").value,d=document.querySelector("#description").value,a=document.querySelector("#dueDate").value;if(c&&a){const o=e.createTodoItem(c,d,a);t.getSelectedProject().addListItem(o),t.getSelectedProject().sortList(),console.log("APPENDED LIST",t.getSelectedProject().getTodo()),n()}}))}()}))},n=function(e){let t=[];return{getTodo:function(){return t},getName:function(){return"Home"},addListItem:function(e){t.push(e)},removeListItem:function(e){t=t.filter((t=>t.id!==e))},sortList:function(){t.sort(((e,t)=>{let o=new Date(e.dueDate),n=new Date(t.dueDate);return[o,n]=[o.getTime(),n.getTime()],o<n?-1:o>n?1:0}))}}}();t.addProject(n),t.selectProject(n),console.log("Selected Project:",t.getSelectedProject()),o();const c=document.querySelector(".task--modal"),d=document.querySelector(".modal-open"),a=document.querySelector(".modal-close");d.addEventListener("click",(()=>{c.showModal(),c.classList.toggle("hidden")})),a.addEventListener("click",(()=>{c.close(),c.classList.toggle("hidden")}))})();